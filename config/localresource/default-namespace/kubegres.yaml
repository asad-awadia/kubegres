apiVersion: kubegres.reactive-tech.io/v1
kind: Kubegres
metadata:
  name: mypostgres
  namespace: default
spec:

  replicas: 3
  image: postgres:17.2
  #port: 5432

  database:
    size: 200Mi
    #storageClassName: standard
    #volumeMount: /var/lib/postgres/data

  customConfig: mypostgres-conf

  #probe:
  #
  #   livenessProbe:
  #      exec:
  #        command:
  #          - sh
  #          - -c
  #          - exec pg_isready -U postgres -h $POD_IP
  #      failureThreshold: 10
  #      initialDelaySeconds: 60
  #      periodSeconds: 20
  #      successThreshold: 1
  #      timeoutSeconds: 15

  #    readinessProbe:
  #    exec:
  #      command:
  #        - sh
  #        - -c
  #        - exec pg_isready -U postgres -h $POD_IP
  #      failureThreshold: 3
  #      initialDelaySeconds: 5
  #      periodSeconds: 5
  #      successThreshold: 1
  #      timeoutSeconds: 3

  #securityContext:
  #  runAsNonRoot: true
  #  runAsUser: 999

  #failover:
  #  isDisabled: true
  #  promotePod: "mypostgres-3-0"

  #backup:
  #  schedule: "*/5 * * * *"
  #  pvcName: backup
  #  volumeMount: /tmp/mypostgres

  #imagePullSecrets:
  #  - name: my-private-docker-repo-secret
  # resources:
  #     limits:
  #       memory: "4Gi"
  #       cpu: "1"
  #     requests:
  #       memory: "2Gi"
  #       cpu: "1"

  #scheduler:
  #
  #  affinity:
  #    podAntiAffinity:
  #      preferredDuringSchedulingIgnoredDuringExecution:
  #        - weight: 90
  #          podAffinityTerm:
  #            labelSelector:
  #              matchExpressions:
  #                - key: app
  #                  operator: In
  #                  values:
  #                    - postgres-name
  #            topologyKey: "kubernetes.io/hostname"
  #
  #  tolerations:
  #    - key: group
  #      operator: Equal
  #      value: critical

  # volume:
  #
  #    volumeMounts:
  #      - mountPath: /dev/shm
  #        name: dshm
  #      - mountPath: /dev/anything
  #        name: anyMount
  #
  #    volumes:
  #      - name: dshm
  #        emptyDir:
  #          medium: Memory
  #          sizeLimit: "600Mi"
  #
  #    volumeClaimTemplates:
  #      - name: anyMount
  #        spec:
  #          accessModes: [ "ReadWriteOnce" ]
  #          storageClassName: standard
  #          resources:
  #            requests:
  #               storage: 1Gi

  env:
    - name: PGPASSWORD
      valueFrom:
        secretKeyRef:
          name: mypostgres-secret
          key: superUserPassword

    - name: POSTGRES_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mypostgres-secret
          key: superUserPassword

    - name: POSTGRES_REPLICATION_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mypostgres-secret
          key: replicationUserPassword

    - name: POSTGRES_MYAPP_PASSWORD
      valueFrom:
        secretKeyRef:
          name: mypostgres-secret
          key: myAppUserPassword
